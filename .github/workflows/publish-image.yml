name: Build and publish docker image

on:
  push:
    branches:
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Run tests
        env:
          VITE_KEYCLOAK_ROOT: "http://auth.open-dpp.localhost.20080"
        run: npm run test

  #  cypress-component-tests:
  #    runs-on: ubuntu-latest # Use the latest Ubuntu runner
  #
  #    steps:
  #      # Step 1: Checkout the repository
  #      - name: Checkout code
  #        uses: actions/checkout@v3
  #
  #      # Step 2: Set up Node.js
  #      - name: Setup Node.js
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: ${{ env.NODE_VERSION }} # Use the Node.js version compatible with your project
  #
  #      # Step 3: Install dependencies
  #      - name: Install dependencies
  #        run: npm install
  #
  #      # Step 4: Run Cypress Component Tests
  #      - name: Run Cypress Component Tests
  #        run: npx cypress run-ct
  #        env:
  #          KEYCLOAK_DISABLED: "true"
  #
  #      # Step 5: Upload Cypress artifacts (optional)
  #      - name: Upload Cypress Artifacts
  #        if: always() # This ensures artifacts are uploaded even if the tests fail
  #        uses: actions/upload-artifact@v3
  #        with:
  #          name: cypress-artifacts
  #          path: |
  #            cypress/videos/
  #            cypress/screenshots/

  build-publish-docker-image:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    permissions:
      contents: read      # Required for reading the repository contents
      packages: write     # Required for pushing to GitHub Packages
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short Git SHA
        id: vars
        run: echo "sha=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build the docker image
        run: |
          docker build -f Dockerfile-prod --build-arg VITE_VIEW_ROOT_URL=https://view.cloud.open-dpp.de --build-arg VITE_ADMIN_ROOT=https://admin.cloud.open-dpp.de --build-arg VITE_KEYCLOAK_ROOT=https://auth.cloud.open-dpp.de --build-arg VITE_API_ROOT=https://api.cloud.open-dpp.de --build-arg VITE_API_ROOT=https://marketplace.cloud.open-dpp.de . -t ghcr.io/${{ github.repository }}:latest -t ghcr.io/${{ github.repository }}:${{ env.sha }}

      - name: Push the docker image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ env.sha }}



